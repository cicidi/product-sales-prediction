openapi: 3.0.3
info:
  title: E-commerce Product Prediction API
  description: |
    Intelligent E-commerce API with Top sales analytics, specific prediction and similarity prediction,.
    This API provides advanced features for product management, search, analytics, and sales predictions.
  version: 1.0.0
  contact:
    name: API Support
    email: walterchen.ca@gmail.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Development Server
  - url: https://api.example.com
    description: Production Server

tags:
  - name: Products
    description: Product management operations
  - name: Orders
    description: Order management operations
  - name: Vector Search
    description: AI-powered vector similarity search
  - name: Analytics
    description: Sales analytics and reporting
  - name: Predictions
    description: AI-powered sales predictions

components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: api-key

  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "P123456"
          description: Unique product identifier
        name:
          type: string
          example: "Wireless Bluetooth Headphones"
          description: Product name
        category:
          type: string
          example: "Electronics"
          description: Product category
        brand:
          type: string
          example: "AudioTech"
          description: Product brand
        price:
          type: number
          format: double
          example: 99.99
          description: Product price
        createTimestamp:
          type: string
          format: date-time
          example: "2023-05-15T10:30:00"
          description: Product creation timestamp
        description:
          type: string
          example: "High-quality wireless headphones with noise cancellation"
          description: Detailed product description

    Order:
      type: object
      properties:
        orderId:
          type: string
          example: "ORD98765"
          description: Unique order identifier
        productId:
          type: string
          example: "P123456"
          description: Product identifier
        buyerId:
          type: string
          example: "USER4321"
          description: Customer who made the purchase
        sellerId:
          type: string
          example: "SELLER789"
          description: Seller who sold the product
        unitPrice:
          type: number
          format: double
          example: 99.99
          description: Price per unit
        quantity:
          type: integer
          example: 2
          description: Number of units ordered
        totalPrice:
          type: number
          format: double
          example: 199.98
          description: Total order price
        timestamp:
          type: string
          format: date-time
          example: "2023-07-20T14:25:00"
          description: Order timestamp

    SalesSearchRequest:
      type: object
      properties:
        topN:
          default: 3
          type: integer
          example: 10
          description: Number of top products to retrieve
        startTime:
          type: string
          default: "2025/01"
          description: Start time in year/month format
        endTime:
          type: string
          default: "2025/05"
          description: End time in year/month format
        sellerId:
          type: string
          required: true
          example: "SELLER789"
          description: Seller ID to filter by
        category:
          type: string
          example: "Electronics"
          description: Category to filter by
      required:
        - sellerId

    SalesPredictionRequest:
      type: object
      properties:
        productId:
          type: string
          example: "P123456"
          description: Product ID to predict sales for
        sellerId:
          type: string
          example: "SELLER789"
          description: Seller ID
        startTime:
          type: string
          example: "2025/06"
          description: Start time in year/month format
        endTime:
          type: string
          example: "2025/07"
          description: End time in year/month format
      required:
        - productId
        - sellerId


paths:
  /v1/products:
    get:
      tags:
        - Products
      summary: Get all products
      description: Retrieve all products, optionally filtered by category and/or seller ID
      operationId: getAllProducts
      parameters:
        - name: category
          in: query
          description: Filter by product category
          required: false
          schema:
            type: string
          example: "Electronics"
        - name: sellerId
          in: query
          description: Filter by seller ID
          required: false
          schema:
            type: string
          example: "SELLER789"
      responses:
        '200':
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  count:
                    type: integer
                    example: 25
                  category:
                    type: string
                    example: "Electronics"
                  sellerId:
                    type: string
                    example: "SELLER789"

  /v1/product/{id}:
    get:
      tags:
        - Products
      summary: Get product by ID
      description: Retrieve a product by its unique identifier
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
          example: "P123456"
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

  /v1/products/search-similar:
    post:
      tags:
        - Products
        - Vector Search
      summary: Search similar products
      description: Find products similar to the given description using vector similarity search
      operationId: searchSimilarProducts
      requestBody:
        description: Search parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  required: false
                  type: string
                  example: "wireless noise-cancelling headphones"
                  description: Text description to search for similar products
                productId:
                  required: false
                  type: string
                  example: "P123456"
                  description: Optional product ID to find similar products
                limit:
                  type: integer
                  default: 3
                  example: 3

      responses:
        '200':
          description: Successfully retrieved similar products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  count:
                    type: integer
                    example: 5

  /v1/orders:
    get:
      tags:
        - Orders
      summary: Get recent orders
      description: Retrieve particular seller's recent orders with pagination support (max 100 items per page)
      operationId: getRecentOrders
      parameters:
        - name: sellerId
          in: query
          description: Seller ID (required to filter orders by seller)
          required: true
          schema:
            type: string
          example: "SELLER789"
        - name: page
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            default: 0
          example: 0
        - name: size
          in: query
          description: Page size (max 100)
          required: false
          schema:
            type: integer
            default: 20
            maximum: 100
          example: 20
      responses:
        '200':
          description: Successfully retrieved orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  currentPage:
                    type: integer
                    example: 0
                  totalItems:
                    type: integer
                    example: 250
                  totalPages:
                    type: integer
                    example: 13
        '400':
          description: Bad request - sellerId is missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "sellerId parameter is required"

  /v1/sales/analytics:
    post:
      tags:
        - Analytics
      summary: Search for top selling products
      description: Returns a list of topN-selling products. Supports optional query parameters for filtering by time period, product category, and seller ID.
      operationId: searchTopSellingProducts
      requestBody:
        description: Search parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesSearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                          example: "P123456"
                        totalQuantity:
                          type: integer
                          example: 250
                        name:
                          type: string
                          example: "Wireless Bluetooth Headphones"
                        category:
                          type: string
                          example: "Electronics"
                        brand:
                          type: string
                          example: "AudioTech"
                        price:
                          type: number
                          format: double
                          example: 99.99
                  count:
                    type: integer
                    example: 10
                  query:
                    $ref: '#/components/schemas/SalesSearchRequest'
        '400':
          description: Bad request due to invalid parameters

  /v1/sales/predict:
    post:
      tags:
        - Predictions
      summary: Predict product sales
      description: Predict future sales for a specific product
      operationId: predictProductSales
      requestBody:
        description: Prediction parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesPredictionRequest'
      responses:
        '200':
          description: Sales prediction
          content:
            application/json:
              schema:
                type: object
                properties:
                  prediction:
                    type: object
                    additionalProperties:
                      type: object
                    example:
                      "2023/06":
                        quantity: 45
                        revenue: 4495.5
                      "2023/07":
                        quantity: 52
                        revenue: 5199.48
                  product:
                    $ref: '#/components/schemas/Product'
                  query:
                    $ref: '#/components/schemas/SalesPredictionRequest'
        '400':
          description: Bad request due to invalid parameters
        '404':
          description: Product not found
